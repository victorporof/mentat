initSidebarItems({"enum":[["AttributeBitFlags","Bit flags used in `flags0` column in temporary tables created during search, such as the `search_results`, `inexact_searches` and `exact_searches` tables. When moving to a more concrete table, such as `datoms`, they are expanded out via these flags and put into their own column rather than a bit field."],["TypedValue","Represents a value that can be stored in a Mentat store."],["ValueType","The attribute of each Mentat assertion has a :db/valueType constraining the value to a particular set.  Mentat recognizes the following :db/valueType values."]],"struct":[["Attribute","A Mentat schema attribute has a value type and several other flags determining how assertions with the attribute are interpreted."],["DB","Represents the metadata required to query from, or apply transactions to, a Mentat store."],["DateTime","ISO 8601 combined date and time with time zone."],["Partition","Represents one partition of the entid space."],["PartitionMap","Map partition names to `Partition` instances."],["Schema","Represents a Mentat schema."],["Utc","The UTC time zone. This is the most efficient time zone when you don't need the local time. It is also used as an offset (which is also a dummy type)."]],"trait":[["TransactableValue","The transactor is tied to `edn::ValueAndSpan` right now, but in the future we'd like to support `TypedValue` directly for programmatic use.  `TransactableValue` encapsulates the interface value types (i.e., values in the value place) need to support to be transacted."]],"type":[["AVMap","Map [a v] pairs to existing entids."],["AVPair","A pair [a v] in the store."],["AttributeSet",""],["Entid","Represents one entid in the entid space."]]});