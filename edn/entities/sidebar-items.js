initSidebarItems({"enum":[["AttributePlace",""],["EntidOrIdent",""],["Entity",""],["EntityPlace",""],["OpType",""],["TempId","A tempid, either an external tempid given in a transaction (usually as an `Value::Text`), or an internal tempid allocated by Mentat itself."],["ValuePlace",""]],"struct":[["LookupRef",""],["TxFunction","A \"transaction function\" that exposes some value determined by the current transaction.  The prototypical example is the current transaction ID, `(transaction-tx)`."]],"trait":[["TransactableValueMarker","`EntityPlace` and `ValuePlace` embed values, either directly (i.e., `ValuePlace::Atom`) or indirectly (i.e., `EntityPlace::LookupRef`).  In order to maintain the graph of `Into` and `From` relations, we need to ensure that `{Value,Entity}Place` can't match as a potential value. (If it does, the `impl Into<T> for T` default conflicts.) This marker trait allows to mark acceptable values, thereby removing `{Entity,Value}Place` from consideration."]],"type":[["MapNotation",""]]});