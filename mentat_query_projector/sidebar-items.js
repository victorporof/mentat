initSidebarItems({"enum":[["QueryResults",""],["SimpleAggregationOp",""]],"fn":[["projected_column_for_var","Return the projected column -- that is, a value or SQL column and an associated name -- for a given variable. Also return the type. Callers are expected to determine whether to project a type tag as an additional SQL column."],["query_projection","Compute a suitable SQL projection for an algebrized query. This takes into account a number of things: - The variable list in the find spec. - The presence of any aggregate operations in the find spec. TODO: for now we only handle   simple variables - The bindings established by the topmost CC. - The types known at algebrizing time. - The types extracted from the store for unknown attributes."]],"macro":[["bail",""]],"mod":[["errors",""]],"struct":[["CombinedProjection","Combines the things you need to turn a query into SQL and turn its results into `QueryResults`: SQL-related projection information (`DISTINCT`, columns, etc.) and a Datalog projector that turns SQL into structures."],["ConstantProjector","A projector that produces a `QueryResult` containing fixed data. Takes a boxed function that should return an empty result set of the desired type."],["QueryOutput",""],["RelResult","The result you get from a 'rel' query, like:"]],"trait":[["BindingTuple","A `BindingTuple` is any type that can accommodate a Mentat tuple query result of fixed length."],["Projector",""]],"type":[["StructuredRelResult",""]]});